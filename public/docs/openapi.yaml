openapi: 3.0.3
info:
    title: 'SaaS Demo'
    description: ''
    version: 1.0.0
servers:
    -
        url: 'http://localhost'
paths:
    '/stripe/payment/{id}':
        get:
            summary: 'Display the form to gather additional payment verification for the given payment.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'No API key provided.  (HINT: set your API key using "Stripe::setApiKey(<API-KEY>)".  You can generate API keys from the Stripe web interface.  See https://stripe.com/api for details, or email support@stripe.com if you have any questions.'
                                    exception: Stripe\Exception\AuthenticationException
                                    file: /app/vendor/stripe/stripe-php/lib/ApiRequestor.php
                                    line: 344
                                    trace: [{ file: /app/vendor/stripe/stripe-php/lib/ApiRequestor.php, line: 119, function: _requestRaw, class: Stripe\ApiRequestor, type: '->' }, { file: /app/vendor/stripe/stripe-php/lib/ApiResource.php, line: 62, function: request, class: Stripe\ApiRequestor, type: '->' }, { file: /app/vendor/stripe/stripe-php/lib/ApiOperations/Retrieve.php, line: 26, function: refresh, class: Stripe\ApiResource, type: '->' }, { file: /app/vendor/laravel/cashier/src/Http/Controllers/PaymentController.php, line: 34, function: retrieve, class: Stripe\PaymentIntent, type: '::' }, { function: show, class: Laravel\Cashier\Http\Controllers\PaymentController, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Controller.php, line: 54, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php, line: 45, function: callAction, class: Illuminate\Routing\Controller, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Route.php, line: 255, function: dispatch, class: Illuminate\Routing\ControllerDispatcher, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Route.php, line: 197, function: runController, class: Illuminate\Routing\Route, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 691, function: run, class: Illuminate\Routing\Route, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Routing\{closure}', class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/cashier/src/Http/Middleware/VerifyRedirectUrl.php, line: 29, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Laravel\Cashier\Http\Middleware\VerifyRedirectUrl, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'No API key provided.  (HINT: set your API key using "Stripe::setApiKey(<API-KEY>)".  You can generate API keys from the Stripe web interface.  See https://stripe.com/api for details, or email support@stripe.com if you have any questions.' }
                                    exception: { type: string, example: Stripe\Exception\AuthenticationException }
                                    file: { type: string, example: /app/vendor/stripe/stripe-php/lib/ApiRequestor.php }
                                    line: { type: integer, example: 344 }
                                    trace: { type: array, example: [{ file: /app/vendor/stripe/stripe-php/lib/ApiRequestor.php, line: 119, function: _requestRaw, class: Stripe\ApiRequestor, type: '->' }, { file: /app/vendor/stripe/stripe-php/lib/ApiResource.php, line: 62, function: request, class: Stripe\ApiRequestor, type: '->' }, { file: /app/vendor/stripe/stripe-php/lib/ApiOperations/Retrieve.php, line: 26, function: refresh, class: Stripe\ApiResource, type: '->' }, { file: /app/vendor/laravel/cashier/src/Http/Controllers/PaymentController.php, line: 34, function: retrieve, class: Stripe\PaymentIntent, type: '::' }, { function: show, class: Laravel\Cashier\Http\Controllers\PaymentController, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Controller.php, line: 54, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php, line: 45, function: callAction, class: Illuminate\Routing\Controller, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Route.php, line: 255, function: dispatch, class: Illuminate\Routing\ControllerDispatcher, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Route.php, line: 197, function: runController, class: Illuminate\Routing\Route, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 691, function: run, class: Illuminate\Routing\Route, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Routing\{closure}', class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/cashier/src/Http/Middleware/VerifyRedirectUrl.php, line: 29, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Laravel\Cashier\Http\Middleware\VerifyRedirectUrl, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: ullam
                required: true
                schema:
                    type: string
    /stripe/webhook:
        post:
            summary: 'Handle a Stripe webhook call.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /sanctum/csrf-cookie:
        get:
            summary: 'Return an empty response simply to trigger the storage of the CSRF cookie in the browser.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /api/v1/external/distance-between:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                origin:
                                    type: string
                                    description: ''
                                    example: doloremque
                                destination:
                                    type: string
                                    description: ''
                                    example: expedita
                            required:
                                - origin
                                - destination
            security: []
    /api/v1/business:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/v1/quote/draft:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: amet
                                last_name:
                                    type: string
                                    description: ''
                                    example: nostrum
                                phone:
                                    type: string
                                    description: ''
                                    example: aliquid
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: jaren55@example.net
                                origin:
                                    type: string
                                    description: ''
                                    example: repudiandae
                                destination:
                                    type: string
                                    description: ''
                                    example: id
                                vehicle_year:
                                    type: integer
                                    description: ''
                                    example: 6
                                vehicle_make:
                                    type: string
                                    description: ''
                                    example: delectus
                                vehicle_model:
                                    type: string
                                    description: ''
                                    example: culpa
                                pickup_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y-m-d.'
                                    example: '2021-12-15'
                                total:
                                    type: number
                                    description: ''
                                    example: 645989.91
                                quote_vehicles:
                                    type: array
                                    description: ''
                                    example: [[]]
                                    items: { type: object, properties: { size: { type: string, description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>8</code>, <code>7</code>, <code>9</code>, <code>10</code>, <code>11</code>, <code>12</code>, <code>13</code>, <code>14</code>, <code>15</code>, <code>16</code>, <code>17</code>, <code>18</code>, <code>19</code>, <code>20</code>, <code>21</code>, <code>22</code>, <code>23</code>, <code>24</code>, <code>25</code>, <code>26</code>, <code>27</code>, <code>28</code>, <code>29</code>, <code>30</code>, <code>31</code>, or <code>32</code>.', example: '8' } }, required: [size] }
                            required:
                                - first_name
                                - last_name
                                - phone
                                - email
                                - origin
                                - destination
                                - vehicle_year
                                - vehicle_make
                                - vehicle_model
                                - pickup_date
                                - total
            security: []
    /api/v1/carrier-types-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/v1/delivery-accuracy-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/v1/states-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/v1/car-sizes-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/v1/quote-statuses-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    '/api/v1/zip/{zip}/autocomplete':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                zip:
                                    type: string
                                    description: ''
                                    example: voluptates
                            required:
                                - zip
            security: []
        parameters:
            -
                in: path
                name: zip
                description: ''
                example: qui
                required: true
                schema:
                    type: string
    '/api/v1/city/{city}/autocomplete':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                city:
                                    type: string
                                    description: ''
                                    example: veniam
                            required:
                                - city
            security: []
        parameters:
            -
                in: path
                name: city
                description: ''
                example: non
                required: true
                schema:
                    type: string
    /api/v1/calculate-price:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                origin_zip:
                                    type: string
                                    description: ''
                                    example: recusandae
                                destination_zip:
                                    type: string
                                    description: ''
                                    example: atque
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: mollitia
                            required:
                                - origin_zip
                                - destination_zip
                                - shipper_id
            security: []
    /api/v1/settings/logo:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    '/api/v1/shipper/{shipper}/quotes/{quote}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: sunt
                                quote_id:
                                    type: string
                                    description: ''
                                    example: libero
                            required:
                                - shipper_id
                                - quote_id
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: temporibus
                                quote_id:
                                    type: string
                                    description: ''
                                    example: eveniet
                                first_name:
                                    type: string
                                    description: ''
                                    example: quod
                                last_name:
                                    type: string
                                    description: ''
                                    example: possimus
                                phone:
                                    type: string
                                    description: ''
                                    example: aliquam
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: durgan.lulu@example.net
                                type:
                                    type: string
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: '0'
                                company:
                                    type: string
                                    description: ''
                                    example: perferendis
                                address_1:
                                    type: string
                                    description: ''
                                    example: quidem
                                address_2:
                                    type: string
                                    description: ''
                                    example: quae
                                zip:
                                    type: string
                                    description: ''
                                    example: ut
                                city:
                                    type: string
                                    description: ''
                                    example: ab
                                state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: OR
                                phone_2:
                                    type: string
                                    description: ''
                                    example: perferendis
                                mobile:
                                    type: string
                                    description: ''
                                    example: cum
                                fax:
                                    type: string
                                    description: ''
                                    example: dolor
                                notes_from_shipper:
                                    type: string
                                    description: ''
                                    example: ex
                                quote_origin_zip:
                                    type: string
                                    description: ''
                                    example: eos
                                quote_origin_city:
                                    type: string
                                    description: ''
                                    example: eum
                                quote_origin_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: IN
                                quote_destination_zip:
                                    type: string
                                    description: ''
                                    example: totam
                                quote_destination_city:
                                    type: string
                                    description: ''
                                    example: dolorem
                                quote_destination_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: LA
                                quote_vehicle_year:
                                    type: integer
                                    description: ''
                                    example: 18
                                quote_vehicle_make:
                                    type: string
                                    description: ''
                                    example: perferendis
                                quote_vehicle_model:
                                    type: string
                                    description: ''
                                    example: quia
                                quote_vehicle_vin:
                                    type: string
                                    description: ''
                                    example: et
                                quote_vehicle_is_running:
                                    type: boolean
                                    description: ''
                                    example: false
                                quote_vehicle_size:
                                    type: string
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>8</code>, <code>7</code>, <code>9</code>, <code>10</code>, <code>11</code>, <code>12</code>, <code>13</code>, <code>14</code>, <code>15</code>, <code>16</code>, <code>17</code>, <code>18</code>, <code>19</code>, <code>20</code>, <code>21</code>, <code>22</code>, <code>23</code>, <code>24</code>, <code>25</code>, <code>26</code>, <code>27</code>, <code>28</code>, <code>29</code>, <code>30</code>, <code>31</code>, or <code>32</code>.'
                                    example: '12'
                                carrier_type:
                                    type: string
                                    description: 'The value must be one of <code>1</code> or <code>2</code>.'
                                    example: '1'
                                available_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_accuracy:
                                    type: string
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, or <code>4</code>.'
                                    example: '3'
                                distance:
                                    type: number
                                    description: ''
                                    example: 88.33618971
                                price:
                                    type: number
                                    description: ''
                                    example: 7807.0131
                                deposit:
                                    type: number
                                    description: ''
                                    example: 1.08665587
                                status:
                                    type: integer
                                    description: 'The value must be one of <code>-1</code>, <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, or <code>7</code>.'
                                    example: 5
                            required:
                                - shipper_id
                                - quote_id
                                - first_name
                                - last_name
                                - phone
                                - email
                                - type
                                - company
                                - quote_origin_zip
                                - quote_origin_city
                                - quote_origin_state
                                - quote_destination_zip
                                - quote_destination_city
                                - quote_destination_state
                                - quote_vehicle_year
                                - quote_vehicle_make
                                - quote_vehicle_model
                                - quote_vehicle_size
                                - carrier_type
                                - available_date
                                - delivery_date
                                - delivery_accuracy
                                - distance
                                - price
                                - status
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: aut
                required: true
                schema:
                    type: string
            -
                in: path
                name: quote
                description: ''
                example: aut
                required: true
                schema:
                    type: string
    '/api/v1/shipper/{shipper}/settings/{setting}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: repudiandae
                required: true
                schema:
                    type: string
            -
                in: path
                name: setting
                description: ''
                example: vitae
                required: true
                schema:
                    type: string
    /widget/quick-quote:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Public key is invalid'
                                    exception: Illuminate\Validation\UnauthorizedException
                                    file: /app/app/Http/Middleware/ExternalAccess.php
                                    line: 41
                                    trace: [{ file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: App\Http\Middleware\ExternalAccess, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'Public key is invalid' }
                                    exception: { type: string, example: Illuminate\Validation\UnauthorizedException }
                                    file: { type: string, example: /app/app/Http/Middleware/ExternalAccess.php }
                                    line: { type: integer, example: 41 }
                                    trace: { type: array, example: [{ file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: App\Http\Middleware\ExternalAccess, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                pub:
                                    type: string
                                    description: ''
                                    example: dolor
                            required:
                                - pub
            security: []
    /api/userinfo:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/clientinfo:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/role:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/change-password:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: numquam
                            required:
                                - password
            security: []
    /api/send-credentials:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: est
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: huels.alexandrea@example.net
                                password:
                                    type: string
                                    description: ''
                                    example: hic
                            required:
                                - shipper_id
                                - email
                                - password
            security: []
    '/api/temporary/confirm-order/{quote}/data':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'No query results for model [App\Models\Quote] voluptatem'
                                    exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                                    file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php
                                    line: 364
                                    trace: [{ file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php, line: 313, function: prepareException, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/nunomaduro/collision/src/Adapters/Laravel/ExceptionHandler.php, line: 54, function: render, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php, line: 51, function: render, class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 172, function: handleException, class: Illuminate\Routing\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/sanctum/src/Http/Middleware/EnsureFrontendRequestsAreStateful.php, line: 33, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Laravel\Sanctum\Http\Middleware\{closure}', class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/sanctum/src/Http/Middleware/EnsureFrontendRequestsAreStateful.php, line: 34, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'No query results for model [App\Models\Quote] voluptatem' }
                                    exception: { type: string, example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException }
                                    file: { type: string, example: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php }
                                    line: { type: integer, example: 364 }
                                    trace: { type: array, example: [{ file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php, line: 313, function: prepareException, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/nunomaduro/collision/src/Adapters/Laravel/ExceptionHandler.php, line: 54, function: render, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php, line: 51, function: render, class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 172, function: handleException, class: Illuminate\Routing\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/sanctum/src/Http/Middleware/EnsureFrontendRequestsAreStateful.php, line: 33, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Laravel\Sanctum\Http\Middleware\{closure}', class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/sanctum/src/Http/Middleware/EnsureFrontendRequestsAreStateful.php, line: 34, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: quote
                description: ''
                example: voluptatem
                required: true
                schema:
                    type: string
    '/api/temporary/confirm-order/{quote}/confirm':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                agreement:
                                    type: boolean
                                    description: ''
                                    example: false
                                quote_signature:
                                    type: string
                                    description: ''
                                    example: voluptatem
                            required:
                                - agreement
                                - quote_signature
            security: []
        parameters:
            -
                in: path
                name: quote
                description: ''
                example: non
                required: true
                schema:
                    type: string
    /api/can/manage-users:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: quasi
                            required:
                                - shipper_id
            security: []
    /api/can/manage-admins:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: sit
                            required:
                                - shipper_id
            security: []
    /api/can/manage-managers:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: laudantium
                            required:
                                - shipper_id
            security: []
    /api/can/manage-dispatchers:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: aut
                            required:
                                - shipper_id
            security: []
    /api/can/manage-drivers:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: est
                            required:
                                - shipper_id
            security: []
    /api/can/manage-contacts:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: repellat
                            required:
                                - shipper_id
            security: []
    /api/can/create-orders:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: error
                            required:
                                - shipper_id
            security: []
    /api/can/see-quotes:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: reprehenderit
                            required:
                                - shipper_id
            security: []
    /api/can/create-quotes:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: voluptatem
                            required:
                                - shipper_id
            security: []
    /api/can/get-quote:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                quote_id:
                                    type: integer
                                    description: ''
                                    example: 14
                            required:
                                - quote_id
            security: []
    /api/can/edit-quote:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                quote_id:
                                    type: integer
                                    description: ''
                                    example: 6
                            required:
                                - quote_id
            security: []
    /api/can/see-loads:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: repellat
                            required:
                                - shipper_id
            security: []
    /api/can/create-loads:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: itaque
                            required:
                                - shipper_id
            security: []
    /api/can/get-load:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                load_id:
                                    type: integer
                                    description: ''
                                    example: 5
                            required:
                                - load_id
            security: []
    /api/can/edit-load:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                load_id:
                                    type: integer
                                    description: ''
                                    example: 13
                            required:
                                - load_id
            security: []
    /api/can/edit-email-templates:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: doloremque
                            required:
                                - shipper_id
            security: []
    /api/user/request-email-change:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: ian.hagenes@example.net
                                old_email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: tstamm@example.com
                            required:
                                - email
                                - old_email
            security: []
    '/api/zip/{zip}/autocomplete':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { error_message: 'The provided API key is invalid.', predictions: [], status: REQUEST_DENIED }
                                properties:
                                    data: { type: object, example: { error_message: 'The provided API key is invalid.', predictions: [], status: REQUEST_DENIED } }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                zip:
                                    type: string
                                    description: ''
                                    example: qui
                            required:
                                - zip
            security: []
        parameters:
            -
                in: path
                name: zip
                description: ''
                example: omnis
                required: true
                schema:
                    type: string
    '/api/city/{city}/autocomplete':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { error_message: 'The provided API key is invalid.', predictions: [], status: REQUEST_DENIED }
                                properties:
                                    data: { type: object, example: { error_message: 'The provided API key is invalid.', predictions: [], status: REQUEST_DENIED } }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                city:
                                    type: string
                                    description: ''
                                    example: est
                            required:
                                - city
            security: []
        parameters:
            -
                in: path
                name: city
                description: ''
                example: nemo
                required: true
                schema:
                    type: string
    '/api/place/{place}/details':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: []
                                properties:
                                    data: { type: array, example: [] }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                place_id:
                                    type: string
                                    description: ''
                                    example: corrupti
                            required:
                                - place_id
            security: []
        parameters:
            -
                in: path
                name: place
                description: ''
                example: est
                required: true
                schema:
                    type: string
    /api/quote-progress-statuses-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ value: Quote, key: 0 }, { value: Sent, key: 1 }, { value: Viewed, key: 2 }, { value: Approved, key: 3 }, { value: Paid, key: 4 }, { value: 'Assigned To Load', key: 5 }, { value: 'Out for Delivery', key: 6 }, { value: Delivered, key: 7 }]
                                properties:
                                    data: { type: array, example: [{ value: Quote, key: 0 }, { value: Sent, key: 1 }, { value: Viewed, key: 2 }, { value: Approved, key: 3 }, { value: Paid, key: 4 }, { value: 'Assigned To Load', key: 5 }, { value: 'Out for Delivery', key: 6 }, { value: Delivered, key: 7 }], items: { type: object } }
            tags:
                - Endpoints
            security: []
    /api/quote-statuses-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/load-statuses-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/states-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/carrier-types-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/car-sizes-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/available-accuracy-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/delivery-accuracy-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/carrier-pay-terms-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/customer-pay-terms-data:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/calculate-price:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                origin_zip:
                                    type: string
                                    description: ''
                                    example: tempora
                                destination_zip:
                                    type: string
                                    description: ''
                                    example: voluptas
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: dolorem
                            required:
                                - origin_zip
                                - destination_zip
                                - shipper_id
            security: []
    /api/upload-avatar:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: 'The value must be an image.'
                            required:
                                - file
            security: []
    /api/upload-company-logo:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: 'The value must be an image.'
                            required:
                                - file
            security: []
    /api/profile:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    '/api/shipper/{shipper}/assign-driver-to-load':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: est
                                load_id:
                                    type: string
                                    description: ''
                                    example: consequuntur
                                driver_id:
                                    type: string
                                    description: ''
                                    example: molestias
                            required:
                                - shipper_id
                                - load_id
                                - driver_id
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: suscipit
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/settings':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: et
                                price_per_mile:
                                    type: integer
                                    description: ''
                                    example: 17
                                public_key:
                                    type: string
                                    description: ''
                                    example: {  }
                                secret_key:
                                    type: string
                                    description: ''
                                    example: {  }
                                business_name:
                                    type: string
                                    description: ''
                                    example: voluptates
                                address:
                                    type: string
                                    description: ''
                                    example: ut
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: officiis
                                phone:
                                    type: string
                                    description: ''
                                    example: et
                                fax:
                                    type: string
                                    description: ''
                                    example: iste
                                timezone:
                                    type: string
                                    description: ''
                                    example: aut
                            required:
                                - shipper_id
                                - price_per_mile
            security: []
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: at
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/contacts':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: velit
                            required:
                                - shipper_id
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                is_primary:
                                    type: boolean
                                    description: ''
                                    example: false
                                contact_group_id:
                                    type: string
                                    description: ''
                                    example: {  }
                                contact_group_name:
                                    type: string
                                    description: ''
                                    example: consequatur
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: veritatis
                                first_name:
                                    type: string
                                    description: ''
                                    example: quam
                                last_name:
                                    type: string
                                    description: ''
                                    example: voluptatum
                                phone:
                                    type: string
                                    description: ''
                                    example: doloremque
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: earnestine.rohan@example.net
                            required:
                                - shipper_id
                                - first_name
                                - last_name
                                - phone
                                - email
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: minima
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/contacts/{contact}':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: consectetur
                                contact_id:
                                    type: string
                                    description: ''
                                    example: illum
                                is_primary:
                                    type: boolean
                                    description: ''
                                    example: false
                                contact_group_id:
                                    type: string
                                    description: ''
                                    example: {  }
                                contact_group_name:
                                    type: string
                                    description: ''
                                    example: provident
                                first_name:
                                    type: string
                                    description: ''
                                    example: dolorem
                                last_name:
                                    type: string
                                    description: ''
                                    example: aliquid
                                phone:
                                    type: string
                                    description: ''
                                    example: distinctio
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: tremblay.carlos@example.com
                            required:
                                - shipper_id
                                - contact_id
                                - first_name
                                - last_name
                                - phone
                                - email
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: sapiente
                required: true
                schema:
                    type: string
            -
                in: path
                name: contact
                description: ''
                example: a
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/contacts/{contact}/delete':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: voluptas
                                contact_id:
                                    type: string
                                    description: ''
                                    example: et
                            required:
                                - shipper_id
                                - contact_id
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: magnam
                required: true
                schema:
                    type: string
            -
                in: path
                name: contact
                description: ''
                example: est
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/admins':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: amet
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/managers':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: inventore
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/dispatchers':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: vitae
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/drivers':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: rerum
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/users':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: kristin06@example.net
                                role:
                                    type: integer
                                    description: 'The value must be one of <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, or <code>7</code>.'
                                    example: 6
                                first_name:
                                    type: string
                                    description: ''
                                    example: consectetur
                                last_name:
                                    type: string
                                    description: ''
                                    example: aut
                                phone:
                                    type: string
                                    description: ''
                                    example: vero
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: debitis
                                password:
                                    type: string
                                    description: ''
                                    example: consequatur
                                ask_password_change_next_login:
                                    type: boolean
                                    description: ''
                                    example: false
                            required:
                                - email
                                - role
                                - first_name
                                - last_name
                                - phone
                                - shipper_id
                                - password
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: sint
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/users/{user}':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: johns.natalia@example.com
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: doloremque
                                user_id:
                                    type: string
                                    description: ''
                                    example: voluptate
                                first_name:
                                    type: string
                                    description: ''
                                    example: illum
                                last_name:
                                    type: string
                                    description: ''
                                    example: et
                                phone:
                                    type: string
                                    description: ''
                                    example: molestias
                                role:
                                    type: integer
                                    description: 'The value must be one of <code>3</code>, <code>4</code>, <code>5</code>, or <code>6</code>.'
                                    example: 6
                                status:
                                    type: integer
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: 1
                            required:
                                - shipper_id
                                - user_id
                                - first_name
                                - last_name
                                - phone
                                - role
                                - status
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: neque
                required: true
                schema:
                    type: string
            -
                in: path
                name: user
                description: ''
                example: quia
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/users/{user}/delete':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: et
                                user_id:
                                    type: string
                                    description: ''
                                    example: autem
                            required:
                                - shipper_id
                                - user_id
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: distinctio
                required: true
                schema:
                    type: string
            -
                in: path
                name: user
                description: ''
                example: distinctio
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/clients':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: queen74@example.org
                                first_name:
                                    type: string
                                    description: ''
                                    example: hic
                                last_name:
                                    type: string
                                    description: ''
                                    example: nisi
                                phone:
                                    type: string
                                    description: ''
                                    example: exercitationem
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: facere
                                password:
                                    type: string
                                    description: ''
                                    example: facilis
                                ask_password_change_next_login:
                                    type: boolean
                                    description: ''
                                    example: false
                                type:
                                    type: string
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: '0'
                                company:
                                    type: string
                                    description: ''
                                    example: rerum
                                address_1:
                                    type: string
                                    description: ''
                                    example: itaque
                                address_2:
                                    type: string
                                    description: ''
                                    example: aut
                                zip:
                                    type: string
                                    description: ''
                                    example: vero
                                city:
                                    type: string
                                    description: ''
                                    example: aliquam
                                state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: GU
                                phone_2:
                                    type: string
                                    description: ''
                                    example: ea
                                mobile:
                                    type: string
                                    description: ''
                                    example: iste
                                fax:
                                    type: string
                                    description: ''
                                    example: in
                                notes_from_shipper:
                                    type: string
                                    description: ''
                                    example: at
                            required:
                                - email
                                - first_name
                                - last_name
                                - phone
                                - shipper_id
                                - password
                                - type
                                - company
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: voluptatem
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/clients/all':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'No query results for model [App\Models\Shipper] sit'
                                    exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                                    file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php
                                    line: 364
                                    trace: [{ file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php, line: 313, function: prepareException, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/nunomaduro/collision/src/Adapters/Laravel/ExceptionHandler.php, line: 54, function: render, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php, line: 51, function: render, class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 172, function: handleException, class: Illuminate\Routing\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/sanctum/src/Http/Middleware/EnsureFrontendRequestsAreStateful.php, line: 33, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Laravel\Sanctum\Http\Middleware\{closure}', class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/sanctum/src/Http/Middleware/EnsureFrontendRequestsAreStateful.php, line: 34, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'No query results for model [App\Models\Shipper] sit' }
                                    exception: { type: string, example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException }
                                    file: { type: string, example: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php }
                                    line: { type: integer, example: 364 }
                                    trace: { type: array, example: [{ file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php, line: 313, function: prepareException, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/nunomaduro/collision/src/Adapters/Laravel/ExceptionHandler.php, line: 54, function: render, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php, line: 51, function: render, class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 172, function: handleException, class: Illuminate\Routing\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /app/vendor/laravel/sanctum/src/Http/Middleware/EnsureFrontendRequestsAreStateful.php, line: 33, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Laravel\Sanctum\Http\Middleware\{closure}', class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/sanctum/src/Http/Middleware/EnsureFrontendRequestsAreStateful.php, line: 34, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: sit
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/clients/{user}':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: nader.fatima@example.org
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: occaecati
                                user_id:
                                    type: string
                                    description: ''
                                    example: voluptas
                                first_name:
                                    type: string
                                    description: ''
                                    example: modi
                                last_name:
                                    type: string
                                    description: ''
                                    example: et
                                phone:
                                    type: string
                                    description: ''
                                    example: veritatis
                                role:
                                    type: integer
                                    description: 'The value must be one of <code>7</code>.'
                                    example: 7
                                status:
                                    type: integer
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: 0
                                type:
                                    type: string
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: '1'
                                company:
                                    type: string
                                    description: ''
                                    example: enim
                                address_1:
                                    type: string
                                    description: ''
                                    example: assumenda
                                address_2:
                                    type: string
                                    description: ''
                                    example: eaque
                                zip:
                                    type: string
                                    description: ''
                                    example: non
                                city:
                                    type: string
                                    description: ''
                                    example: sapiente
                                state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: OR
                                phone_2:
                                    type: string
                                    description: ''
                                    example: ipsam
                                mobile:
                                    type: string
                                    description: ''
                                    example: sed
                                fax:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                notes_from_shipper:
                                    type: string
                                    description: ''
                                    example: sint
                            required:
                                - shipper_id
                                - user_id
                                - first_name
                                - last_name
                                - phone
                                - role
                                - status
                                - type
                                - company
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: veniam
                required: true
                schema:
                    type: string
            -
                in: path
                name: user
                description: ''
                example: occaecati
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/leads':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: briana74@example.com
                                first_name:
                                    type: string
                                    description: ''
                                    example: velit
                                last_name:
                                    type: string
                                    description: ''
                                    example: possimus
                                phone:
                                    type: string
                                    description: ''
                                    example: nihil
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: hic
                                type:
                                    type: string
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: '0'
                                company:
                                    type: string
                                    description: ''
                                    example: a
                                address_1:
                                    type: string
                                    description: ''
                                    example: occaecati
                                address_2:
                                    type: string
                                    description: ''
                                    example: vel
                                zip:
                                    type: string
                                    description: ''
                                    example: iste
                                city:
                                    type: string
                                    description: ''
                                    example: aperiam
                                state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: WV
                                phone_2:
                                    type: string
                                    description: ''
                                    example: qui
                                mobile:
                                    type: string
                                    description: ''
                                    example: mollitia
                                fax:
                                    type: string
                                    description: ''
                                    example: recusandae
                                notes_from_shipper:
                                    type: string
                                    description: ''
                                    example: rem
                            required:
                                - email
                                - first_name
                                - last_name
                                - phone
                                - shipper_id
                                - type
                                - company
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: repellat
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/leads/{user}':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: aaron26@example.com
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: non
                                user_id:
                                    type: string
                                    description: ''
                                    example: ea
                                first_name:
                                    type: string
                                    description: ''
                                    example: aliquid
                                last_name:
                                    type: string
                                    description: ''
                                    example: ea
                                phone:
                                    type: string
                                    description: ''
                                    example: rerum
                                role:
                                    type: integer
                                    description: 'The value must be one of <code>7</code>.'
                                    example: 7
                                status:
                                    type: integer
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: 1
                                type:
                                    type: string
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: '0'
                                company:
                                    type: string
                                    description: ''
                                    example: sit
                                address_1:
                                    type: string
                                    description: ''
                                    example: in
                                address_2:
                                    type: string
                                    description: ''
                                    example: id
                                zip:
                                    type: string
                                    description: ''
                                    example: velit
                                city:
                                    type: string
                                    description: ''
                                    example: id
                                state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: LA
                                phone_2:
                                    type: string
                                    description: ''
                                    example: sapiente
                                mobile:
                                    type: string
                                    description: ''
                                    example: deserunt
                                fax:
                                    type: string
                                    description: ''
                                    example: eum
                                notes_from_shipper:
                                    type: string
                                    description: ''
                                    example: porro
                            required:
                                - shipper_id
                                - user_id
                                - first_name
                                - last_name
                                - phone
                                - role
                                - status
                                - type
                                - company
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: ea
                required: true
                schema:
                    type: string
            -
                in: path
                name: user
                description: ''
                example: sapiente
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/orders':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                client_id:
                                    type: string
                                    description: ''
                                    example: {  }
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: tenetur
                                first_name:
                                    type: string
                                    description: ''
                                    example: soluta
                                last_name:
                                    type: string
                                    description: ''
                                    example: eos
                                phone:
                                    type: string
                                    description: ''
                                    example: temporibus
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: catalina.emmerich@example.com
                                type:
                                    type: string
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: '0'
                                company:
                                    type: string
                                    description: ''
                                    example: fugiat
                                address_1:
                                    type: string
                                    description: ''
                                    example: impedit
                                address_2:
                                    type: string
                                    description: ''
                                    example: qui
                                zip:
                                    type: string
                                    description: ''
                                    example: eum
                                city:
                                    type: string
                                    description: ''
                                    example: aut
                                state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: MP
                                phone_2:
                                    type: string
                                    description: ''
                                    example: quae
                                mobile:
                                    type: string
                                    description: ''
                                    example: qui
                                fax:
                                    type: string
                                    description: ''
                                    example: vero
                                notes_from_shipper:
                                    type: string
                                    description: ''
                                    example: amet
                                quote_origin_zip:
                                    type: string
                                    description: ''
                                    example: id
                                quote_origin_city:
                                    type: string
                                    description: ''
                                    example: amet
                                quote_origin_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: MT
                                quote_destination_zip:
                                    type: string
                                    description: ''
                                    example: non
                                quote_destination_city:
                                    type: string
                                    description: ''
                                    example: beatae
                                quote_destination_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: NY
                                quote_vehicle_year:
                                    type: integer
                                    description: ''
                                    example: 6
                                quote_vehicle_make:
                                    type: string
                                    description: ''
                                    example: distinctio
                                quote_vehicle_model:
                                    type: string
                                    description: ''
                                    example: est
                                quote_vehicle_vin:
                                    type: string
                                    description: ''
                                    example: eos
                                quote_vehicle_is_running:
                                    type: boolean
                                    description: ''
                                    example: false
                                quote_vehicle_size:
                                    type: string
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>8</code>, <code>7</code>, <code>9</code>, <code>10</code>, <code>11</code>, <code>12</code>, <code>13</code>, <code>14</code>, <code>15</code>, <code>16</code>, <code>17</code>, <code>18</code>, <code>19</code>, <code>20</code>, <code>21</code>, <code>22</code>, <code>23</code>, <code>24</code>, <code>25</code>, <code>26</code>, <code>27</code>, <code>28</code>, <code>29</code>, <code>30</code>, <code>31</code>, or <code>32</code>.'
                                    example: '19'
                                carrier_type:
                                    type: string
                                    description: 'The value must be one of <code>1</code> or <code>2</code>.'
                                    example: '2'
                                available_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_accuracy:
                                    type: string
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, or <code>4</code>.'
                                    example: '4'
                                distance:
                                    type: number
                                    description: ''
                                    example: 534.2285
                                price:
                                    type: number
                                    description: ''
                                    example: 205730.47739
                                deposit:
                                    type: number
                                    description: ''
                                    example: !!float 0
                            required:
                                - shipper_id
                                - first_name
                                - last_name
                                - phone
                                - email
                                - type
                                - company
                                - quote_origin_zip
                                - quote_origin_city
                                - quote_origin_state
                                - quote_destination_zip
                                - quote_destination_city
                                - quote_destination_state
                                - quote_vehicle_year
                                - quote_vehicle_make
                                - quote_vehicle_model
                                - quote_vehicle_size
                                - carrier_type
                                - available_date
                                - delivery_date
                                - delivery_accuracy
                                - distance
                                - price
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: consequatur
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/quotes':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                client_id:
                                    type: string
                                    description: ''
                                    example: {  }
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: esse
                                first_name:
                                    type: string
                                    description: ''
                                    example: cumque
                                last_name:
                                    type: string
                                    description: ''
                                    example: perferendis
                                phone:
                                    type: string
                                    description: ''
                                    example: et
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: zaria.grimes@example.net
                                type:
                                    type: string
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: '0'
                                company:
                                    type: string
                                    description: ''
                                    example: sit
                                address_1:
                                    type: string
                                    description: ''
                                    example: dolor
                                address_2:
                                    type: string
                                    description: ''
                                    example: non
                                zip:
                                    type: string
                                    description: ''
                                    example: veniam
                                city:
                                    type: string
                                    description: ''
                                    example: sed
                                state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: MA
                                phone_2:
                                    type: string
                                    description: ''
                                    example: aut
                                mobile:
                                    type: string
                                    description: ''
                                    example: dignissimos
                                fax:
                                    type: string
                                    description: ''
                                    example: quasi
                                notes_from_shipper:
                                    type: string
                                    description: ''
                                    example: harum
                                quote_origin_zip:
                                    type: string
                                    description: ''
                                    example: accusantium
                                quote_origin_city:
                                    type: string
                                    description: ''
                                    example: ipsam
                                quote_origin_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: NM
                                quote_destination_zip:
                                    type: string
                                    description: ''
                                    example: et
                                quote_destination_city:
                                    type: string
                                    description: ''
                                    example: occaecati
                                quote_destination_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: AL
                                quote_vehicle_year:
                                    type: integer
                                    description: ''
                                    example: 14
                                quote_vehicle_make:
                                    type: string
                                    description: ''
                                    example: incidunt
                                quote_vehicle_model:
                                    type: string
                                    description: ''
                                    example: nihil
                                quote_vehicle_vin:
                                    type: string
                                    description: ''
                                    example: nisi
                                quote_vehicle_is_running:
                                    type: boolean
                                    description: ''
                                    example: false
                                quote_vehicle_size:
                                    type: string
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>8</code>, <code>7</code>, <code>9</code>, <code>10</code>, <code>11</code>, <code>12</code>, <code>13</code>, <code>14</code>, <code>15</code>, <code>16</code>, <code>17</code>, <code>18</code>, <code>19</code>, <code>20</code>, <code>21</code>, <code>22</code>, <code>23</code>, <code>24</code>, <code>25</code>, <code>26</code>, <code>27</code>, <code>28</code>, <code>29</code>, <code>30</code>, <code>31</code>, or <code>32</code>.'
                                    example: '24'
                                carrier_type:
                                    type: string
                                    description: 'The value must be one of <code>1</code> or <code>2</code>.'
                                    example: '2'
                                available_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_accuracy:
                                    type: string
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, or <code>4</code>.'
                                    example: '4'
                                distance:
                                    type: number
                                    description: ''
                                    example: 4469.5902
                                price:
                                    type: number
                                    description: ''
                                    example: 151923172.91837
                                deposit:
                                    type: number
                                    description: ''
                                    example: 381.590696243
                            required:
                                - shipper_id
                                - first_name
                                - last_name
                                - phone
                                - email
                                - type
                                - company
                                - quote_origin_zip
                                - quote_origin_city
                                - quote_origin_state
                                - quote_destination_zip
                                - quote_destination_city
                                - quote_destination_state
                                - quote_vehicle_year
                                - quote_vehicle_make
                                - quote_vehicle_model
                                - quote_vehicle_size
                                - carrier_type
                                - available_date
                                - delivery_date
                                - delivery_accuracy
                                - distance
                                - price
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: sapiente
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/quotes/{quote}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: quidem
                                quote_id:
                                    type: string
                                    description: ''
                                    example: aliquid
                            required:
                                - shipper_id
                                - quote_id
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: minus
                                quote_id:
                                    type: string
                                    description: ''
                                    example: nihil
                                first_name:
                                    type: string
                                    description: ''
                                    example: eum
                                last_name:
                                    type: string
                                    description: ''
                                    example: ullam
                                phone:
                                    type: string
                                    description: ''
                                    example: natus
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: green.arnulfo@example.net
                                type:
                                    type: string
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: '0'
                                company:
                                    type: string
                                    description: ''
                                    example: labore
                                address_1:
                                    type: string
                                    description: ''
                                    example: hic
                                address_2:
                                    type: string
                                    description: ''
                                    example: blanditiis
                                zip:
                                    type: string
                                    description: ''
                                    example: consequatur
                                city:
                                    type: string
                                    description: ''
                                    example: in
                                state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: MT
                                phone_2:
                                    type: string
                                    description: ''
                                    example: expedita
                                mobile:
                                    type: string
                                    description: ''
                                    example: atque
                                fax:
                                    type: string
                                    description: ''
                                    example: aut
                                notes_from_shipper:
                                    type: string
                                    description: ''
                                    example: quaerat
                                quote_origin_zip:
                                    type: string
                                    description: ''
                                    example: id
                                quote_origin_city:
                                    type: string
                                    description: ''
                                    example: porro
                                quote_origin_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: ND
                                quote_destination_zip:
                                    type: string
                                    description: ''
                                    example: voluptas
                                quote_destination_city:
                                    type: string
                                    description: ''
                                    example: hic
                                quote_destination_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: AK
                                quote_vehicle_year:
                                    type: integer
                                    description: ''
                                    example: 10
                                quote_vehicle_make:
                                    type: string
                                    description: ''
                                    example: magnam
                                quote_vehicle_model:
                                    type: string
                                    description: ''
                                    example: error
                                quote_vehicle_vin:
                                    type: string
                                    description: ''
                                    example: sit
                                quote_vehicle_is_running:
                                    type: boolean
                                    description: ''
                                    example: false
                                quote_vehicle_size:
                                    type: string
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>8</code>, <code>7</code>, <code>9</code>, <code>10</code>, <code>11</code>, <code>12</code>, <code>13</code>, <code>14</code>, <code>15</code>, <code>16</code>, <code>17</code>, <code>18</code>, <code>19</code>, <code>20</code>, <code>21</code>, <code>22</code>, <code>23</code>, <code>24</code>, <code>25</code>, <code>26</code>, <code>27</code>, <code>28</code>, <code>29</code>, <code>30</code>, <code>31</code>, or <code>32</code>.'
                                    example: '9'
                                carrier_type:
                                    type: string
                                    description: 'The value must be one of <code>1</code> or <code>2</code>.'
                                    example: '1'
                                available_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_accuracy:
                                    type: string
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, or <code>4</code>.'
                                    example: '2'
                                distance:
                                    type: number
                                    description: ''
                                    example: 226742864.02299
                                price:
                                    type: number
                                    description: ''
                                    example: 2660.0676
                                deposit:
                                    type: number
                                    description: ''
                                    example: 1322880.47
                                status:
                                    type: integer
                                    description: 'The value must be one of <code>-1</code>, <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, or <code>7</code>.'
                                    example: 5
                            required:
                                - shipper_id
                                - quote_id
                                - first_name
                                - last_name
                                - phone
                                - email
                                - type
                                - company
                                - quote_origin_zip
                                - quote_origin_city
                                - quote_origin_state
                                - quote_destination_zip
                                - quote_destination_city
                                - quote_destination_state
                                - quote_vehicle_year
                                - quote_vehicle_make
                                - quote_vehicle_model
                                - quote_vehicle_size
                                - carrier_type
                                - available_date
                                - delivery_date
                                - delivery_accuracy
                                - distance
                                - price
                                - status
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: aut
                required: true
                schema:
                    type: string
            -
                in: path
                name: quote
                description: ''
                example: non
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/quotes/{quote}/delete':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: quis
                                quote_id:
                                    type: string
                                    description: ''
                                    example: minima
                            required:
                                - shipper_id
                                - quote_id
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: voluptatem
                required: true
                schema:
                    type: string
            -
                in: path
                name: quote
                description: ''
                example: laboriosam
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/quotes/{quote}/restore':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: tenetur
                                quote_id:
                                    type: string
                                    description: ''
                                    example: nam
                            required:
                                - shipper_id
                                - quote_id
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: eos
                required: true
                schema:
                    type: string
            -
                in: path
                name: quote
                description: ''
                example: aut
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/quotes/{quote}/email':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: kuvalis.billie@example.com
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: esse
                                quote_id:
                                    type: string
                                    description: ''
                                    example: perspiciatis
                            required:
                                - email
                                - shipper_id
                                - quote_id
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: quibusdam
                required: true
                schema:
                    type: string
            -
                in: path
                name: quote
                description: ''
                example: est
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/quotes/{quote}/to-order':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: et
                                quote_id:
                                    type: string
                                    description: ''
                                    example: et
                            required:
                                - shipper_id
                                - quote_id
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: vel
                required: true
                schema:
                    type: string
            -
                in: path
                name: quote
                description: ''
                example: explicabo
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/quotes/{quote}/pay':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: est
                                quote_id:
                                    type: string
                                    description: ''
                                    example: assumenda
                                card_number:
                                    type: integer
                                    description: ''
                                    example: 18
                                card_month:
                                    type: string
                                    description: 'The value must be one of <code>01</code>, <code>1</code>, <code>02</code>, <code>2</code>, <code>03</code>, <code>3</code>, <code>04</code>, <code>4</code>, <code>05</code>, <code>5</code>, <code>06</code>, <code>6</code>, <code>07</code>, <code>7</code>, <code>08</code>, <code>8</code>, <code>09</code>, <code>9</code>, <code>10</code>, <code>11</code>, or <code>12</code>.'
                                    example: '06'
                                card_year:
                                    type: integer
                                    description: ''
                                    example: 7
                                card_ccv:
                                    type: integer
                                    description: ''
                                    example: 19
                            required:
                                - shipper_id
                                - quote_id
                                - card_number
                                - card_month
                                - card_year
                                - card_ccv
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: consectetur
                required: true
                schema:
                    type: string
            -
                in: path
                name: quote
                description: ''
                example: quo
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/loads':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: eligendi
                                client_id:
                                    type: string
                                    description: ''
                                    example: ipsum
                                driver_id:
                                    type: string
                                    description: ''
                                    example: error
                                custom_load_number:
                                    type: string
                                    description: ''
                                    example: consequatur
                                referrer:
                                    type: string
                                    description: ''
                                    example: itaque
                                attachments:
                                    type: array
                                    description: 'The value must be a file.'
                                    example: [null, null]
                                    items: { type: file }
                                description:
                                    type: string
                                    description: ''
                                    example: repudiandae
                                first_name:
                                    type: string
                                    description: ''
                                    example: soluta
                                last_name:
                                    type: string
                                    description: ''
                                    example: harum
                                phone:
                                    type: string
                                    description: ''
                                    example: earum
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: magdalena96@example.com
                                type:
                                    type: integer
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: 1
                                company:
                                    type: string
                                    description: ''
                                    example: exercitationem
                                address_1:
                                    type: string
                                    description: ''
                                    example: magni
                                address_2:
                                    type: string
                                    description: ''
                                    example: qui
                                zip:
                                    type: string
                                    description: ''
                                    example: iste
                                city:
                                    type: string
                                    description: ''
                                    example: cum
                                state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: AL
                                phone_2:
                                    type: string
                                    description: ''
                                    example: eligendi
                                mobile:
                                    type: string
                                    description: ''
                                    example: quisquam
                                fax:
                                    type: string
                                    description: ''
                                    example: est
                                notes_from_shipper:
                                    type: string
                                    description: ''
                                    example: sunt
                                load_origin_name:
                                    type: string
                                    description: ''
                                    example: explicabo
                                load_origin_company:
                                    type: string
                                    description: ''
                                    example: saepe
                                load_origin_type:
                                    type: integer
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: 0
                                load_origin_address_1:
                                    type: string
                                    description: ''
                                    example: illo
                                load_origin_address_2:
                                    type: string
                                    description: ''
                                    example: unde
                                load_origin_city:
                                    type: string
                                    description: ''
                                    example: cupiditate
                                load_origin_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: AE
                                load_origin_zip:
                                    type: string
                                    description: ''
                                    example: consequatur
                                load_origin_phone:
                                    type: string
                                    description: ''
                                    example: ut
                                load_origin_phone_2:
                                    type: string
                                    description: ''
                                    example: cumque
                                load_origin_mobile:
                                    type: string
                                    description: ''
                                    example: id
                                load_origin_email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: amina.klein@example.net
                                load_destination_name:
                                    type: string
                                    description: ''
                                    example: blanditiis
                                load_destination_company:
                                    type: string
                                    description: ''
                                    example: in
                                load_destination_type:
                                    type: integer
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: 0
                                load_destination_address_1:
                                    type: string
                                    description: ''
                                    example: vel
                                load_destination_address_2:
                                    type: string
                                    description: ''
                                    example: ut
                                load_destination_city:
                                    type: string
                                    description: ''
                                    example: officiis
                                load_destination_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: NV
                                load_destination_zip:
                                    type: string
                                    description: ''
                                    example: modi
                                load_destination_phone:
                                    type: string
                                    description: ''
                                    example: itaque
                                load_destination_phone_2:
                                    type: string
                                    description: ''
                                    example: quis
                                load_destination_mobile:
                                    type: string
                                    description: ''
                                    example: voluptates
                                load_destination_email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: ohegmann@example.org
                                load_vehicles:
                                    type: array
                                    description: ''
                                    example: [[]]
                                    items: { type: object, properties: { year: { type: integer, description: '', example: 18 }, make: { type: string, description: '', example: tempore }, model: { type: string, description: '', example: error }, vin: { type: string, description: '', example: occaecati }, is_running: { type: boolean, description: '', example: false }, size: { type: string, description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>8</code>, <code>7</code>, <code>9</code>, <code>10</code>, <code>11</code>, <code>12</code>, <code>13</code>, <code>14</code>, <code>15</code>, <code>16</code>, <code>17</code>, <code>18</code>, <code>19</code>, <code>20</code>, <code>21</code>, <code>22</code>, <code>23</code>, <code>24</code>, <code>25</code>, <code>26</code>, <code>27</code>, <code>28</code>, <code>29</code>, <code>30</code>, <code>31</code>, or <code>32</code>.', example: '29' }, price: { type: number, description: '', example: 1526.7022817 }, state: { type: string, description: '', example: ab }, color: { type: string, description: '', example: quidem }, plate_number: { type: string, description: '', example: aperiam }, lot_number: { type: string, description: '', example: adipisci }, p_o_number: { type: string, description: '', example: eum }, notes: { type: string, description: '', example: quisquam } }, required: [year, make, model, size, price] }
                                carrier_type:
                                    type: string
                                    description: 'The value must be one of <code>1</code> or <code>2</code>.'
                                    example: '1'
                                available_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_accuracy:
                                    type: string
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, or <code>4</code>.'
                                    example: '1'
                                available_accuracy:
                                    type: string
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, or <code>4</code>.'
                                    example: '2'
                                distance:
                                    type: number
                                    description: ''
                                    example: 1740896.631
                                price:
                                    type: number
                                    description: ''
                                    example: 11391140.020449
                                deposit:
                                    type: number
                                    description: ''
                                    example: 359382481.90122
                                customer_pay_terms:
                                    type: integer
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, or <code>5</code>.'
                                    example: 4
                                carrier_pay_terms:
                                    type: integer
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, or <code>6</code>.'
                                    example: 5
                                carrier_pay:
                                    type: number
                                    description: ''
                                    example: !!float 9637
                            required:
                                - shipper_id
                                - first_name
                                - last_name
                                - phone
                                - email
                                - type
                                - company
                                - load_origin_city
                                - load_origin_state
                                - load_origin_zip
                                - load_destination_city
                                - load_destination_state
                                - load_destination_zip
                                - carrier_type
                                - available_date
                                - delivery_date
                                - delivery_accuracy
                                - available_accuracy
                                - distance
                                - price
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: aliquam
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/loads/{load}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: enim
                                load_id:
                                    type: string
                                    description: ''
                                    example: enim
                            required:
                                - shipper_id
                                - load_id
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                status:
                                    type: integer
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: 1
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: officiis
                                driver_id:
                                    type: string
                                    description: ''
                                    example: ratione
                                custom_load_number:
                                    type: string
                                    description: ''
                                    example: vitae
                                referrer:
                                    type: string
                                    description: ''
                                    example: sint
                                attachments:
                                    type: array
                                    description: 'The value must be a file.'
                                    example: [null, null]
                                    items: { type: file }
                                description:
                                    type: string
                                    description: ''
                                    example: totam
                                first_name:
                                    type: string
                                    description: ''
                                    example: odit
                                last_name:
                                    type: string
                                    description: ''
                                    example: voluptas
                                phone:
                                    type: string
                                    description: ''
                                    example: quis
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: nhegmann@example.org
                                type:
                                    type: integer
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: 0
                                company:
                                    type: string
                                    description: ''
                                    example: non
                                address_1:
                                    type: string
                                    description: ''
                                    example: minus
                                address_2:
                                    type: string
                                    description: ''
                                    example: assumenda
                                zip:
                                    type: string
                                    description: ''
                                    example: unde
                                city:
                                    type: string
                                    description: ''
                                    example: eos
                                state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: NJ
                                phone_2:
                                    type: string
                                    description: ''
                                    example: quos
                                mobile:
                                    type: string
                                    description: ''
                                    example: rerum
                                fax:
                                    type: string
                                    description: ''
                                    example: eligendi
                                notes_from_shipper:
                                    type: string
                                    description: ''
                                    example: et
                                load_origin_name:
                                    type: string
                                    description: ''
                                    example: pariatur
                                load_origin_company:
                                    type: string
                                    description: ''
                                    example: similique
                                load_origin_type:
                                    type: integer
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: 0
                                load_origin_address_1:
                                    type: string
                                    description: ''
                                    example: facere
                                load_origin_address_2:
                                    type: string
                                    description: ''
                                    example: non
                                load_origin_city:
                                    type: string
                                    description: ''
                                    example: et
                                load_origin_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: VA
                                load_origin_zip:
                                    type: string
                                    description: ''
                                    example: tempore
                                load_origin_phone:
                                    type: string
                                    description: ''
                                    example: est
                                load_origin_phone_2:
                                    type: string
                                    description: ''
                                    example: earum
                                load_origin_mobile:
                                    type: string
                                    description: ''
                                    example: laboriosam
                                load_origin_email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: dbeier@example.com
                                load_destination_name:
                                    type: string
                                    description: ''
                                    example: pariatur
                                load_destination_company:
                                    type: string
                                    description: ''
                                    example: enim
                                load_destination_type:
                                    type: integer
                                    description: 'The value must be one of <code>0</code> or <code>1</code>.'
                                    example: 1
                                load_destination_address_1:
                                    type: string
                                    description: ''
                                    example: enim
                                load_destination_address_2:
                                    type: string
                                    description: ''
                                    example: qui
                                load_destination_city:
                                    type: string
                                    description: ''
                                    example: excepturi
                                load_destination_state:
                                    type: string
                                    description: 'The value must be one of <code>AL</code>, <code>AK</code>, <code>AZ</code>, <code>AR</code>, <code>CA</code>, <code>CO</code>, <code>CT</code>, <code>DE</code>, <code>DC</code>, <code>FL</code>, <code>GA</code>, <code>HI</code>, <code>ID</code>, <code>IL</code>, <code>IN</code>, <code>IA</code>, <code>KS</code>, <code>KY</code>, <code>LA</code>, <code>ME</code>, <code>MD</code>, <code>MA</code>, <code>MI</code>, <code>MN</code>, <code>MS</code>, <code>MO</code>, <code>MT</code>, <code>NE</code>, <code>NV</code>, <code>NH</code>, <code>NJ</code>, <code>NM</code>, <code>NY</code>, <code>NC</code>, <code>ND</code>, <code>OH</code>, <code>OK</code>, <code>OR</code>, <code>PA</code>, <code>RI</code>, <code>SC</code>, <code>SD</code>, <code>TN</code>, <code>TX</code>, <code>UT</code>, <code>VT</code>, <code>VA</code>, <code>WA</code>, <code>WV</code>, <code>WI</code>, <code>WY</code>, <code>AA</code>, <code>AE</code>, <code>AP</code>, <code>AS</code>, <code>GU</code>, <code>MP</code>, <code>PR</code>, <code>VI</code>, <code>FM</code>, <code>MH</code>, or <code>PW</code>.'
                                    example: VI
                                load_destination_zip:
                                    type: string
                                    description: ''
                                    example: vel
                                load_destination_phone:
                                    type: string
                                    description: ''
                                    example: necessitatibus
                                load_destination_phone_2:
                                    type: string
                                    description: ''
                                    example: provident
                                load_destination_mobile:
                                    type: string
                                    description: ''
                                    example: animi
                                load_destination_email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: lpadberg@example.com
                                load_vehicles:
                                    type: array
                                    description: ''
                                    example: [[]]
                                    items: { type: object, properties: { year: { type: integer, description: '', example: 12 }, make: { type: string, description: '', example: aliquid }, model: { type: string, description: '', example: et }, vin: { type: string, description: '', example: fugit }, is_running: { type: boolean, description: '', example: false }, size: { type: string, description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>8</code>, <code>7</code>, <code>9</code>, <code>10</code>, <code>11</code>, <code>12</code>, <code>13</code>, <code>14</code>, <code>15</code>, <code>16</code>, <code>17</code>, <code>18</code>, <code>19</code>, <code>20</code>, <code>21</code>, <code>22</code>, <code>23</code>, <code>24</code>, <code>25</code>, <code>26</code>, <code>27</code>, <code>28</code>, <code>29</code>, <code>30</code>, <code>31</code>, or <code>32</code>.', example: '1' }, price: { type: number, description: '', example: 0.85721 }, state: { type: string, description: '', example: distinctio }, color: { type: string, description: '', example: et }, plate_number: { type: string, description: '', example: aut }, lot_number: { type: string, description: '', example: numquam }, p_o_number: { type: string, description: '', example: eius }, notes: { type: string, description: '', example: sit } }, required: [year, make, model, size, price] }
                                carrier_type:
                                    type: string
                                    description: 'The value must be one of <code>1</code> or <code>2</code>.'
                                    example: '2'
                                available_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_date:
                                    type: string
                                    description: 'The value must be a valid date. The value must be a valid date in the format Y/m/d.'
                                    example: 2021/12/15
                                delivery_accuracy:
                                    type: string
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, or <code>4</code>.'
                                    example: '4'
                                distance:
                                    type: number
                                    description: ''
                                    example: 173837.31
                                price:
                                    type: number
                                    description: ''
                                    example: 756009.12
                                deposit:
                                    type: number
                                    description: ''
                                    example: 61.545027264
                                customer_pay_terms:
                                    type: integer
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, or <code>5</code>.'
                                    example: 3
                                carrier_pay_terms:
                                    type: integer
                                    description: 'The value must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, or <code>6</code>.'
                                    example: 3
                                carrier_pay:
                                    type: number
                                    description: ''
                                    example: 99740166.861
                            required:
                                - status
                                - shipper_id
                                - first_name
                                - last_name
                                - phone
                                - email
                                - type
                                - company
                                - load_origin_city
                                - load_origin_state
                                - load_origin_zip
                                - load_destination_city
                                - load_destination_state
                                - load_destination_zip
                                - carrier_type
                                - available_date
                                - delivery_date
                                - delivery_accuracy
                                - distance
                                - price
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: voluptas
                required: true
                schema:
                    type: string
            -
                in: path
                name: load
                description: ''
                example: quis
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/loads/{load}/delete':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: omnis
                                load_id:
                                    type: string
                                    description: ''
                                    example: optio
                            required:
                                - shipper_id
                                - load_id
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: magni
                required: true
                schema:
                    type: string
            -
                in: path
                name: load
                description: ''
                example: voluptatem
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/loads/{load}/email':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: id
                                load_id:
                                    type: string
                                    description: ''
                                    example: cupiditate
                            required:
                                - shipper_id
                                - load_id
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: magni
                required: true
                schema:
                    type: string
            -
                in: path
                name: load
                description: ''
                example: sit
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/email-templates':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: sed
                            required:
                                - shipper_id
            security: []
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: est
                                background_color:
                                    type: string
                                    description: ''
                                    example: a
                                html_template:
                                    type: string
                                    description: ''
                                    example: numquam
                                id:
                                    type: string
                                    description: ''
                                    example: deserunt
                                name:
                                    type: string
                                    description: ''
                                    example: aperiam
                                subject:
                                    type: string
                                    description: ''
                                    example: beatae
                                type:
                                    type: string
                                    description: 'The value must be one of <code>quote</code>, <code>credentials</code>, <code>order</code>, <code>quote-draft</code>, <code>email-verification</code>, <code>email-change-verification</code>, or <code>sms</code>.'
                                    example: email-change-verification
                            required:
                                - shipper_id
                                - html_template
                                - name
                                - subject
                                - type
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: ut
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/email-templates/variables':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: quisquam
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/email-templates/active':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: occaecati
                                background_color:
                                    type: string
                                    description: ''
                                    example: et
                                html_template:
                                    type: string
                                    description: ''
                                    example: est
                                id:
                                    type: string
                                    description: ''
                                    example: et
                                name:
                                    type: string
                                    description: ''
                                    example: et
                                subject:
                                    type: string
                                    description: ''
                                    example: in
                                type:
                                    type: string
                                    description: 'The value must be one of <code>quote</code>, <code>credentials</code>, <code>order</code>, <code>quote-draft</code>, <code>email-verification</code>, <code>email-change-verification</code>, or <code>sms</code>.'
                                    example: sms
                            required:
                                - shipper_id
                                - html_template
                                - name
                                - subject
                                - type
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: error
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/email-templates/delete':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                shipper_id:
                                    type: string
                                    description: ''
                                    example: quis
                                templates:
                                    type: array
                                    description: ''
                                    example: [quia, odio]
                                    items: { type: string }
                            required:
                                - shipper_id
                                - templates
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: dolore
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/settings/{settingKey}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: qui
                required: true
                schema:
                    type: string
            -
                in: path
                name: settingKey
                description: ''
                example: ad
                required: true
                schema:
                    type: string
    '/api/shipper/{shipper}/settings/logo':
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: shipper
                description: ''
                example: ab
                required: true
                schema:
                    type: string
    /api/shipper/roles:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/shipper/subordinate-roles:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/shipper/roles-to-create:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/shipper/staff-roles-to-create:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/widgets/settings:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/auth:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <title>SaaS Demo</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <!-- CSRF Token -->\n    <meta name=\"_token\" content=\"9Z4kuNdnNjZNziYLPqTiTldJGgYbJXuVGrP1HCPq\">\n    <link rel=\"shortcut icon\" href=\"http://localhost/favicon.ico\">\n    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>\n    <link href=\"https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap\" rel=\"stylesheet\">\n\n\n<!-- common css -->\n    <link id=\"mainStyle\" href=\"http://localhost/css/app.css\" rel=\"stylesheet\" />\n    <!-- end common css -->\n\n    </head>\n<body data-base-url=\"http://localhost\">\n\n\n\n\n    <div id=\"app\">\n        <App></App>\n    </div>\n\n<!-- base js -->\n<script src=\"http://localhost/js/app.js\"></script>\n<!-- end base js -->\n\n<!-- plugin js -->\n<!-- end plugin js -->\n\n</body>\n</html>\n"
            tags:
                - Endpoints
            security: []
    '/email/verify/{id}/{hash}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                403:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'This action is unauthorized.'
                                    exception: Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
                                    file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php
                                    line: 366
                                    trace: [{ file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php, line: 313, function: prepareException, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/nunomaduro/collision/src/Adapters/Laravel/ExceptionHandler.php, line: 54, function: render, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php, line: 51, function: render, class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 130, function: handleException, class: Illuminate\Routing\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php, line: 41, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php, line: 77, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\VerifyCsrfToken, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php, line: 49, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\View\Middleware\ShareErrorsFromSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 121, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 63, function: handleStatefulRequest, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php, line: 67, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\EncryptCookies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'This action is unauthorized.' }
                                    exception: { type: string, example: Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException }
                                    file: { type: string, example: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php }
                                    line: { type: integer, example: 366 }
                                    trace: { type: array, example: [{ file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php, line: 313, function: prepareException, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/nunomaduro/collision/src/Adapters/Laravel/ExceptionHandler.php, line: 54, function: render, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php, line: 51, function: render, class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 130, function: handleException, class: Illuminate\Routing\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php, line: 41, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php, line: 77, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\VerifyCsrfToken, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php, line: 49, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\View\Middleware\ShareErrorsFromSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 121, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 63, function: handleStatefulRequest, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php, line: 67, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\EncryptCookies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: itaque
                required: true
                schema:
                    type: string
            -
                in: path
                name: hash
                description: ''
                example: vero
                required: true
                schema:
                    type: string
    /email/verification-notification:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    '/{user}/new-email-verification/{email}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                403:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Invalid signature.'
                                    exception: Illuminate\Routing\Exceptions\InvalidSignatureException
                                    file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ValidateSignature.php
                                    line: 26
                                    trace: [{ file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\ValidateSignature, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php, line: 41, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php, line: 77, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\VerifyCsrfToken, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php, line: 49, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\View\Middleware\ShareErrorsFromSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 121, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 63, function: handleStatefulRequest, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php, line: 67, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\EncryptCookies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'Invalid signature.' }
                                    exception: { type: string, example: Illuminate\Routing\Exceptions\InvalidSignatureException }
                                    file: { type: string, example: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ValidateSignature.php }
                                    line: { type: integer, example: 26 }
                                    trace: { type: array, example: [{ file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\ValidateSignature, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php, line: 41, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php, line: 77, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\VerifyCsrfToken, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php, line: 49, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\View\Middleware\ShareErrorsFromSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 121, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 63, function: handleStatefulRequest, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php, line: 67, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\EncryptCookies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: ''
                                    example: ea
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: bell07@example.com
                            required:
                                - user_id
                                - email
            security: []
        parameters:
            -
                in: path
                name: user
                description: ''
                example: voluptatem
                required: true
                schema:
                    type: string
            -
                in: path
                name: email
                description: ''
                example: et
                required: true
                schema:
                    type: string
    '/tracking/quote-email/{quote}/view':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'No query results for model [App\Models\Quote] eius'
                                    exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                                    file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php
                                    line: 364
                                    trace: [{ file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php, line: 313, function: prepareException, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/nunomaduro/collision/src/Adapters/Laravel/ExceptionHandler.php, line: 54, function: render, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php, line: 51, function: render, class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 172, function: handleException, class: Illuminate\Routing\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php, line: 77, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\VerifyCsrfToken, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php, line: 49, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\View\Middleware\ShareErrorsFromSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 121, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 63, function: handleStatefulRequest, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php, line: 67, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\EncryptCookies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'No query results for model [App\Models\Quote] eius' }
                                    exception: { type: string, example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException }
                                    file: { type: string, example: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php }
                                    line: { type: integer, example: 364 }
                                    trace: { type: array, example: [{ file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php, line: 313, function: prepareException, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/nunomaduro/collision/src/Adapters/Laravel/ExceptionHandler.php, line: 54, function: render, class: Illuminate\Foundation\Exceptions\Handler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php, line: 51, function: render, class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 172, function: handleException, class: Illuminate\Routing\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php, line: 77, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\VerifyCsrfToken, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php, line: 49, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\View\Middleware\ShareErrorsFromSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 121, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php, line: 63, function: handleStatefulRequest, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Session\Middleware\StartSession, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php, line: 67, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Cookie\Middleware\EncryptCookies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 693, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 668, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 634, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 623, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /app/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /app/vendor/fideloper/proxy/src/TrustProxies.php, line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 118, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /app/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: call_user_func_array }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 95, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 39, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /app/vendor/symfony/console/Command/Command.php, line: 258, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 920, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 266, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/symfony/console/Application.php, line: 142, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /app/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /app/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: quote
                description: ''
                example: eius
                required: true
                schema:
                    type: string
    '/external/{any}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <title>SaaS Demo</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <!-- CSRF Token -->\n    <meta name=\"_token\" content=\"9Z4kuNdnNjZNziYLPqTiTldJGgYbJXuVGrP1HCPq\">\n    <link rel=\"shortcut icon\" href=\"http://localhost/favicon.ico\">\n    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>\n    <link href=\"https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap\" rel=\"stylesheet\">\n\n\n<!-- common css -->\n    <link id=\"mainStyle\" href=\"http://localhost/css/app.css\" rel=\"stylesheet\" />\n    <!-- end common css -->\n\n    </head>\n<body data-base-url=\"http://localhost\">\n\n\n\n\n    <div id=\"app\">\n        <App :external=\"true\"></App>\n    </div>\n\n<!-- base js -->\n<script src=\"http://localhost/js/app.js\"></script>\n<!-- end base js -->\n\n<!-- plugin js -->\n<!-- end plugin js -->\n\n</body>\n</html>\n"
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: any
                description: ''
                example: quae
                required: true
                schema:
                    type: string
    '/{any}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <title>SaaS Demo</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <!-- CSRF Token -->\n    <meta name=\"_token\" content=\"9Z4kuNdnNjZNziYLPqTiTldJGgYbJXuVGrP1HCPq\">\n    <link rel=\"shortcut icon\" href=\"http://localhost/favicon.ico\">\n    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>\n    <link href=\"https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap\" rel=\"stylesheet\">\n\n\n<!-- common css -->\n    <link id=\"mainStyle\" href=\"http://localhost/css/app.css\" rel=\"stylesheet\" />\n    <!-- end common css -->\n\n    </head>\n<body data-base-url=\"http://localhost\">\n\n\n\n\n    <div id=\"app\">\n        <App></App>\n    </div>\n\n<!-- base js -->\n<script src=\"http://localhost/js/app.js\"></script>\n<!-- end base js -->\n\n<!-- plugin js -->\n<!-- end plugin js -->\n\n</body>\n</html>\n"
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: any
                description: ''
                example: voluptatem
                required: true
                schema:
                    type: string
    /login:
        get:
            summary: 'Show the application''s login form.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <title>SaaS Demo</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <!-- CSRF Token -->\n    <meta name=\"_token\" content=\"9Z4kuNdnNjZNziYLPqTiTldJGgYbJXuVGrP1HCPq\">\n    <link rel=\"shortcut icon\" href=\"http://localhost/favicon.ico\">\n    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>\n    <link href=\"https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap\" rel=\"stylesheet\">\n\n\n<!-- common css -->\n    <link id=\"mainStyle\" href=\"http://localhost/css/app.css\" rel=\"stylesheet\" />\n    <!-- end common css -->\n\n    </head>\n<body data-base-url=\"http://localhost\">\n\n\n\n\n    <div id=\"app\">\n        <App></App>\n    </div>\n\n<!-- base js -->\n<script src=\"http://localhost/js/app.js\"></script>\n<!-- end base js -->\n\n<!-- plugin js -->\n<!-- end plugin js -->\n\n</body>\n</html>\n"
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Handle a login request to the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /logout:
        post:
            summary: 'Log the user out of the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /register:
        get:
            summary: 'Show the application registration form.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <title>SaaS Demo</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <!-- CSRF Token -->\n    <meta name=\"_token\" content=\"9Z4kuNdnNjZNziYLPqTiTldJGgYbJXuVGrP1HCPq\">\n    <link rel=\"shortcut icon\" href=\"http://localhost/favicon.ico\">\n    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>\n    <link href=\"https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap\" rel=\"stylesheet\">\n\n\n<!-- common css -->\n    <link id=\"mainStyle\" href=\"http://localhost/css/app.css\" rel=\"stylesheet\" />\n    <!-- end common css -->\n\n    </head>\n<body data-base-url=\"http://localhost\">\n\n\n\n\n    <div id=\"app\">\n        <App></App>\n    </div>\n\n<!-- base js -->\n<script src=\"http://localhost/js/app.js\"></script>\n<!-- end base js -->\n\n<!-- plugin js -->\n<!-- end plugin js -->\n\n</body>\n</html>\n"
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Handle a registration request for the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: reprehenderit
                                last_name:
                                    type: string
                                    description: ''
                                    example: sed
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: brandy10@example.com
                                password:
                                    type: string
                                    description: ''
                                    example: eum
                                address:
                                    type: string
                                    description: ''
                                    example: maxime
                                business_name:
                                    type: string
                                    description: ''
                                    example: eos
                                phone:
                                    type: string
                                    description: ''
                                    example: magni
                                city:
                                    type: string
                                    description: ''
                                    example: aspernatur
                                state:
                                    type: string
                                    description: 'The value must be one of <code>Alabama</code>, <code>Alaska</code>, <code>Arizona</code>, <code>Arkansas</code>, <code>California</code>, <code>Colorado</code>, <code>Connecticut</code>, <code>Delaware</code>, <code>D.C. Columbia</code>, <code>Florida</code>, <code>Georgia</code>, <code>Hawaii</code>, <code>Idaho</code>, <code>Illinois</code>, <code>Indiana</code>, <code>Iowa</code>, <code>Kansas</code>, <code>Kentucky</code>, <code>Louisiana</code>, <code>Maine</code>, <code>Maryland</code>, <code>Massachusetts</code>, <code>Michigan</code>, <code>Minnesota</code>, <code>Mississippi</code>, <code>Missouri</code>, <code>Montana</code>, <code>Nebraska</code>, <code>Nevada</code>, <code>New Hampshire</code>, <code>New Jersey</code>, <code>New Mexico</code>, <code>New York</code>, <code>North Carolina</code>, <code>North Dakota</code>, <code>Ohio</code>, <code>Oklahoma</code>, <code>Oregon</code>, <code>Pennsylvania</code>, <code>Rhode Island</code>, <code>South Carolina</code>, <code>South Dakota</code>, <code>Tennessee</code>, <code>Texas</code>, <code>Utah</code>, <code>Vermont</code>, <code>Virginia</code>, <code>Washington</code>, <code>West Virginia</code>, <code>Wisconsin</code>, <code>Wyoming</code>, <code>Armed Forces America</code>, <code>Armed Forces Europe</code>, <code>Armed Forces Pacific</code>, <code>American Samoa</code>, <code>Guam</code>, <code>Northern Mariana Islands</code>, <code>Puerto Rico</code>, <code>Virgin Islands</code>, <code>Micronesia</code>, <code>Marshall Islands</code>, or <code>Palau</code>.'
                                    example: Oklahoma
                                zip:
                                    type: string
                                    description: ''
                                    example: tenetur
                            required:
                                - first_name
                                - last_name
                                - email
                                - password
                                - address
                                - business_name
                                - phone
                                - city
                                - state
                                - zip
            security: []
    /password/reset:
        get:
            summary: 'Display the form to request a password reset link.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <title>SaaS Demo</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <!-- CSRF Token -->\n    <meta name=\"_token\" content=\"9Z4kuNdnNjZNziYLPqTiTldJGgYbJXuVGrP1HCPq\">\n    <link rel=\"shortcut icon\" href=\"http://localhost/favicon.ico\">\n    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>\n    <link href=\"https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap\" rel=\"stylesheet\">\n\n\n<!-- common css -->\n    <link id=\"mainStyle\" href=\"http://localhost/css/app.css\" rel=\"stylesheet\" />\n    <!-- end common css -->\n\n    </head>\n<body data-base-url=\"http://localhost\">\n\n\n\n\n    <div id=\"app\">\n        <App></App>\n    </div>\n\n<!-- base js -->\n<script src=\"http://localhost/js/app.js\"></script>\n<!-- end base js -->\n\n<!-- plugin js -->\n<!-- end plugin js -->\n\n</body>\n</html>\n"
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Reset the given user''s password.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /password/email:
        post:
            summary: 'Send a reset link to the given user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    '/password/reset/{token}':
        get:
            summary: 'Display the password reset view for the given token.'
            description: 'If no token is present, display the link request form.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <title>SaaS Demo</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <!-- CSRF Token -->\n    <meta name=\"_token\" content=\"9Z4kuNdnNjZNziYLPqTiTldJGgYbJXuVGrP1HCPq\">\n    <link rel=\"shortcut icon\" href=\"http://localhost/favicon.ico\">\n    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>\n    <link href=\"https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap\" rel=\"stylesheet\">\n\n\n<!-- common css -->\n    <link id=\"mainStyle\" href=\"http://localhost/css/app.css\" rel=\"stylesheet\" />\n    <!-- end common css -->\n\n    </head>\n<body data-base-url=\"http://localhost\">\n\n\n\n\n    <div id=\"app\">\n        <App></App>\n    </div>\n\n<!-- base js -->\n<script src=\"http://localhost/js/app.js\"></script>\n<!-- end base js -->\n\n<!-- plugin js -->\n<!-- end plugin js -->\n\n</body>\n</html>\n"
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: token
                description: ''
                example: temporibus
                required: true
                schema:
                    type: string
    /password/confirm:
        get:
            summary: 'Display the password confirmation view.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <title>SaaS Demo</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <!-- CSRF Token -->\n    <meta name=\"_token\" content=\"9Z4kuNdnNjZNziYLPqTiTldJGgYbJXuVGrP1HCPq\">\n    <link rel=\"shortcut icon\" href=\"http://localhost/favicon.ico\">\n    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>\n    <link href=\"https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap\" rel=\"stylesheet\">\n\n\n<!-- common css -->\n    <link id=\"mainStyle\" href=\"http://localhost/css/app.css\" rel=\"stylesheet\" />\n    <!-- end common css -->\n\n    </head>\n<body data-base-url=\"http://localhost\">\n\n\n\n\n    <div id=\"app\">\n        <App></App>\n    </div>\n\n<!-- base js -->\n<script src=\"http://localhost/js/app.js\"></script>\n<!-- end base js -->\n\n<!-- plugin js -->\n<!-- end plugin js -->\n\n</body>\n</html>\n"
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Confirm the given user''s password.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
